{"title":"swift中struct和class的区别","date":"2021-12-21T16:00:00.000Z","date_formatted":{"ll":"Dec 22, 2021","L":"12/22/2021","MM-DD":"12-22"},"author":"HongWeiChen","link":"2021/12/22/2021-12-22-struct和class的区别","tags":["Swift"],"updated":"2021-12-22T03:54:21.000Z","content":"<h1 id=\"struct和class的区别\">struct和class的区别<a title=\"#struct和class的区别\" href=\"#struct和class的区别\"></a></h1>\n<p>类型不同，class是引用类型，struct是值类型，值类型和引用类型区别在于，值类型在赋值和传递时将进行复制，而引用类型则只会使引用对象的一个&quot;指向&quot;。</p>\n<h3 id=\"class的优势\">class的优势<a title=\"#class的优势\" href=\"#class的优势\"></a></h3>\n<ul>\n<li>可以继承</li>\n<li>类型转换可以在runtime的时候检查和解释一个实例的类型</li>\n<li>可以用deinit来释放资源</li>\n<li>一个类可以多次被引用</li>\n</ul>\n<h3 id=\"struct的优势\">struct的优势<a title=\"#struct的优势\" href=\"#struct的优势\"></a></h3>\n<ul>\n<li>结构较小，适用于复制操作，相比于一个class的实例被多次引用更加安全</li>\n<li>无须担心内存Memory leak或者多线程冲突问题</li>\n</ul>\n","prev":{"title":"HTTP协议","link":"2022/01/25/2021-08-16-HTTP协议"},"next":{"title":"方法的本质","link":"2021/12/22/2021-12-23-方法的本质"},"plink":"http://hongweichen.github.io/2021/12/22/2021-12-22-struct和class的区别/","toc":[{"id":"struct和class的区别","title":"struct和class的区别","index":"1","children":[{"id":"class的优势","title":"class的优势","index":"1.1"},{"id":"struct的优势","title":"struct的优势","index":"1.2"}]}],"reading_time":"166 words in 1 min"}