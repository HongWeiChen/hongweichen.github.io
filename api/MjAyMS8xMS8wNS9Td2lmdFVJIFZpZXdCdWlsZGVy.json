{"title":"SwiftUI ViewBuilder","date":"2021-11-04T16:00:00.000Z","date_formatted":{"ll":"Nov 5, 2021","L":"11/05/2021","MM-DD":"11-05"},"link":"2021/11/05/SwiftUI ViewBuilder","tags":["SwiftUI"],"updated":"2022-02-21T11:53:11.942Z","content":"<h1 id=\"viewbuilder\">ViewBuilder<a title=\"#viewbuilder\" href=\"#viewbuilder\"></a></h1>\n<p>ViewBuilder 视图构建</p>\n<p>Apple官方有一个解释：</p>\n<ul>\n<li>Allowing those closure to provide multiple child views</li>\n</ul>\n<p>允许闭包中提供多个子视图</p>\n<p>如果不使用@ViewBuilder的时候只可以传递一个View在闭包里，使用@ViewBuilder可以传递多个View到闭包中。</p>\n<ul>\n<li>示例</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">ExampleView</span>&lt;<span class=\"title class_\">Content</span>: <span class=\"title class_\">View</span>&gt;: <span class=\"title class_\">View</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ViewBuilder</span> <span class=\"keyword\">var</span> content: () -&gt; <span class=\"type\">Content</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> body: <span class=\"keyword\">some</span> <span class=\"type\">View</span> &#123;</span><br><span class=\"line\">        content()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@main</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">MainApp</span>: <span class=\"title class_\">App</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> body: <span class=\"keyword\">some</span> <span class=\"type\">Scene</span> &#123;</span><br><span class=\"line\">      <span class=\"type\">WindowGroup</span> &#123;</span><br><span class=\"line\">          <span class=\"type\">ExampleView</span> &#123;</span><br><span class=\"line\">              <span class=\"type\">Text</span>(<span class=\"string\">&quot;Hello world&quot;</span>)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://m.qpic.cn/psc?/V53N7OG413cvz52OliN03DvKaZ42EFAJ/TmEUgtj9EK6.7V8ajmQrEJA**rCz*ljiFBpgg0HY5fmkaAskrF3r*WS.8KGer4kPGNr7*TkQz3.XCxo2DfuNdKVwux1JWBJ.sGcgpHeDk1U!/b&amp;bo=PgGyAgAAAAADF70!&amp;rf=viewer_4\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li>在UIKit中UIView是一个Class，而在SwiftUI中，View是一个Protocol</li>\n</ul>\n<h1 id=\"再看看viewbuilder\">再看看ViewBuilder<a title=\"#再看看viewbuilder\" href=\"#再看看viewbuilder\"></a></h1>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@available</span>(<span class=\"keyword\">iOS</span> <span class=\"number\">13.0</span>, <span class=\"keyword\">macOS</span> <span class=\"number\">10.15</span>, <span class=\"keyword\">tvOS</span> <span class=\"number\">13.0</span>, <span class=\"keyword\">watchOS</span> <span class=\"number\">6.0</span>, <span class=\"operator\">*</span>)</span><br><span class=\"line\"><span class=\"keyword\">@resultBuilder</span> <span class=\"keyword\">public</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">ViewBuilder</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// Builds an empty view from a block containing no statements.</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">func</span> <span class=\"title function_\">buildBlock</span>() -&gt; <span class=\"type\">EmptyView</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// Passes a single view written as a child view through unmodified.</span></span><br><span class=\"line\">    <span class=\"comment\">///</span></span><br><span class=\"line\">    <span class=\"comment\">/// An example of a single view written as a child view is</span></span><br><span class=\"line\">    <span class=\"comment\">/// `&#123; Text(&quot;Hello&quot;) &#125;`.</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">func</span> <span class=\"title function_\">buildBlock</span>&lt;<span class=\"type\">Content</span>&gt;(<span class=\"keyword\">_</span> <span class=\"params\">content</span>: <span class=\"type\">Content</span>) -&gt; <span class=\"type\">Content</span> <span class=\"keyword\">where</span> <span class=\"type\">Content</span> : <span class=\"type\">View</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看出ViewBuilder是一个struct</p>\n<h1 id=\"resultbuilder\">ResultBuilder<a title=\"#resultbuilder\" href=\"#resultbuilder\"></a></h1>\n<ul>\n<li>\n<p>@resultBuilder是一个自定义的类型（之前是叫@_functionBuilder），添加了相关语法，用以自然地、声明的方式来创建嵌套的数据，比如链表和树。使用resultBuilder的代码可以包含原始的Swift语法，比如if和for以方便掌控条件数据或者重复的数据。</p>\n</li>\n<li>\n<p>一个类、结构体使用@resultBuilder注解时，必须至少包含一个buildBlock方法，并且这个方法是static静态的。这个方法可以接收0个或者多个参数，在函数内部就确定了参数组成形式。</p>\n</li>\n<li>\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@resultBuilder</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">StringBuilder</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">func</span> <span class=\"title function_\">buildBlock</span>(<span class=\"keyword\">_</span> <span class=\"params\">s1</span>: <span class=\"type\">String</span>, <span class=\"keyword\">_</span> <span class=\"params\">s2</span>: <span class=\"type\">String</span>) -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">            s1 <span class=\"operator\">+</span> s2</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">func</span> <span class=\"title function_\">welcome</span>(<span class=\"meta\">@StringBuilder</span> <span class=\"params\">showText</span>: () -&gt; <span class=\"type\">String</span>) -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    showText()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@main</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">MainApp</span>: <span class=\"title class_\">App</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> body: <span class=\"keyword\">some</span> <span class=\"type\">Scene</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">WindowGroup</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">ExampleView</span> &#123;</span><br><span class=\"line\">                <span class=\"type\">Text</span>(welcome &#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;hello &quot;</span></span><br><span class=\"line\">                    <span class=\"string\">&quot;world&quot;</span></span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://m.qpic.cn/psc?/V53N7OG413cvz52OliN03DvKaZ42EFAJ/TmEUgtj9EK6.7V8ajmQrEJA**rCz*ljiFBpgg0HY5fmkaAskrF3r*WS.8KGer4kPGNr7*TkQz3.XCxo2DfuNdKVwux1JWBJ.sGcgpHeDk1U!/b&amp;bo=PgGyAgAAAAADF70!&amp;rf=viewer_4\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"再回到viewbuilder\">再回到ViewBuilder<a title=\"#再回到viewbuilder\" href=\"#再回到viewbuilder\"></a></h1>\n<p>在ViewBuilder中，Extension中含有许多方法</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// Provides support for “if” statements in multi-statement closures,</span></span><br><span class=\"line\"><span class=\"comment\">/// producing an optional view that is visible only when the condition</span></span><br><span class=\"line\"><span class=\"comment\">/// evaluates to `true`.</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">func</span> <span class=\"title function_\">buildIf</span>&lt;<span class=\"type\">Content</span>&gt;(<span class=\"keyword\">_</span> <span class=\"params\">content</span>: <span class=\"type\">Content</span>?) -&gt; <span class=\"type\">Content</span>? <span class=\"keyword\">where</span> <span class=\"type\">Content</span> : <span class=\"type\">View</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// Provides support for &quot;if&quot; statements in multi-statement closures,</span></span><br><span class=\"line\"><span class=\"comment\">/// producing conditional content for the &quot;then&quot; branch.</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">func</span> <span class=\"title function_\">buildEither</span>&lt;<span class=\"type\">TrueContent</span>, <span class=\"type\">FalseContent</span>&gt;(<span class=\"params\">first</span>: <span class=\"type\">TrueContent</span>) -&gt; _ConditionalContent<span class=\"operator\">&lt;</span><span class=\"type\">TrueContent</span>, <span class=\"type\">FalseContent</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">where</span> <span class=\"type\">TrueContent</span> : <span class=\"type\">View</span>, <span class=\"type\">FalseContent</span> : <span class=\"type\">View</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// Provides support for &quot;if-else&quot; statements in multi-statement closures,</span></span><br><span class=\"line\"><span class=\"comment\">/// producing conditional content for the &quot;else&quot; branch.</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">func</span> <span class=\"title function_\">buildEither</span>&lt;<span class=\"type\">TrueContent</span>, <span class=\"type\">FalseContent</span>&gt;(<span class=\"params\">second</span>: <span class=\"type\">FalseContent</span>) -&gt; _ConditionalContent<span class=\"operator\">&lt;</span><span class=\"type\">TrueContent</span>, <span class=\"type\">FalseContent</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">where</span> <span class=\"type\">TrueContent</span> : <span class=\"type\">View</span>, <span class=\"type\">FalseContent</span> : <span class=\"type\">View</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// Provides support for &quot;if&quot; statements with `#available()` clauses in</span></span><br><span class=\"line\"><span class=\"comment\">/// multi-statement closures, producing conditional content for the &quot;then&quot;</span></span><br><span class=\"line\"><span class=\"comment\">/// branch, i.e. the conditionally-available branch.</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">func</span> <span class=\"title function_\">buildLimitedAvailability</span>&lt;<span class=\"type\">Content</span>&gt;(<span class=\"keyword\">_</span> <span class=\"params\">content</span>: <span class=\"type\">Content</span>) -&gt; <span class=\"type\">AnyView</span> <span class=\"keyword\">where</span> <span class=\"type\">Content</span> : <span class=\"type\">View</span></span><br></pre></td></tr></table></figure>\n<p>比较值得关心的是</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">func</span> <span class=\"title function_\">buildBlock</span>&lt;<span class=\"type\">C0</span>, <span class=\"type\">C1</span>&gt;(<span class=\"keyword\">_</span> <span class=\"params\">c0</span>: <span class=\"type\">C0</span>, <span class=\"keyword\">_</span> <span class=\"params\">c1</span>: <span class=\"type\">C1</span>) -&gt; <span class=\"type\">TupleView</span>&lt;(<span class=\"type\">C0</span>, <span class=\"type\">C1</span>)&gt; <span class=\"keyword\">where</span> <span class=\"type\">C0</span> : <span class=\"type\">View</span>, <span class=\"type\">C1</span> : <span class=\"type\">View</span></span><br></pre></td></tr></table></figure>\n<p>C0…Cn一系列方法</p>\n<p>ViewBuilder结构体有11个名为buildBlock的函数，分别从0-10个View的类型参数，因此再SwiftUI中一个接收@ViewBuilder类型参数的视图容器最多能接收10个子视图，如果不能满足需求可以通过拆分来增加子视图的个数</p>\n<ul>\n<li>A custom parameter attribute that constructs views from closures.</li>\n</ul>\n<p>这是Apple官方文档对ViewBuilder的定义，简单来说ViewBuilder就是一个包含多个视图的闭包。</p>\n","prev":{"title":"SwiftUI State","link":"2021/11/05/SwiftUI State"},"next":{"title":"使用Property Wrapper为Codable解码设定默认值","link":"2021/11/01/使用Property Wrapper为Codable解码设定默认值"},"plink":"http://hongweichen.github.io/2021/11/05/SwiftUI ViewBuilder/","toc":[{"id":"viewbuilder","title":"ViewBuilder","index":"1"},{"id":"再看看viewbuilder","title":"再看看ViewBuilder","index":"2"},{"id":"resultbuilder","title":"ResultBuilder","index":"3"},{"id":"再回到viewbuilder","title":"再回到ViewBuilder","index":"4"}],"reading_time":"807 words in 5 min"}